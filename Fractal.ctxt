#BlueJ class context
comment0.target=Fractal
comment0.text=\n\ generate\ a\ fractal\n\n\ @author\ Eric\ Boris\n\ @version\ 11/18/2018\n
comment1.params=
comment1.target=Fractal()
comment1.text=\n\ construct\ a\ new\ fractal\n
comment10.params=radius\ depth\ ratio
comment10.target=int\ maxDepth(double,\ int,\ double)
comment10.text=\n\ the\ maximum\ depth\ that\ elements\ will\ be\ drawn\ at\n\ \n\ @param\ \ \ radius\ \ \ \ \ \ \ \ \ \ the\ largest\ elements\ starting\ radius\n\ @param\ \ \ depth\ \ \ \ \ \ \ \ \ \ \ the\ desired\ draw\ depth\n\ @param\ \ \ ratio\ \ \ \ \ \ \ \ \ \ \ the\ ratio\ between\ elements\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ maximum\ depth\ that\ elements\ will\ be\ drawn\ at\n
comment2.params=x\ y\ radius\ a1\ a2\ depth\ ratio
comment2.target=ArrayList\ generateFractal(double,\ double,\ double,\ double,\ double,\ int,\ double)
comment2.text=\n\ generate\ the\ fractal\ array\n\ \n\ @param\ \ \ x\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ x\ position\ to\ draw\ this\ element\n\ @param\ \ \ y\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ y\ position\ to\ draw\ this\ element\n\ @param\ \ \ radius\ \ \ \ \ \ \ \ \ \ the\ radius\ of\ this\ element\n\ @param\ \ \ a1\ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ starting\ angle\ of\ this\ element\n\ @param\ \ \ a2\ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ angle\ modifier\ of\ this\ element\n\ @param\ \ \ depth\ \ \ \ \ \ \ \ \ \ \ the\ current\ depth\ of\ this\ element\n\ @param\ \ \ ratio\ \ \ \ \ \ \ \ \ \ \ the\ ratio\ between\ this\ element\ and\ the\ next\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ an\ array\ of\ fractal\ elements\n
comment3.params=observer
comment3.target=void\ register(Observer)
comment3.text=\n\ add\ the\ given\ observer\ to\ this\ subjects\ list\ of\ observers\n\ \n\ @param\ \ \ observer\ \ \ \ \ \ \ \ \ \ \ \ the\ observer\ to\ add\n
comment4.params=observer
comment4.target=void\ remove(Observer)
comment4.text=\n\ remove\ the\ given\ observer\ from\ this\ subjects\ list\ of\ observers\n\ \n\ @param\ \ \ observer\ \ \ \ \ \ \ \ \ \ \ \ the\ observer\ to\ remove\n
comment5.params=
comment5.target=void\ notifyObservers()
comment5.text=\n\ notify\ this\ subjects\ list\ of\ observers\ of\ changes\ made\ to\ this\ subject\n
comment6.params=x\ y\ radius\ depth\ ratio\ angle\ fillColor1\ fillColor2\ lineColor1\ lineColor2\ useOutline\ useGradient
comment6.target=void\ setData(int,\ int,\ int,\ int,\ int,\ int,\ java.awt.Color,\ java.awt.Color,\ java.awt.Color,\ java.awt.Color,\ boolean,\ boolean)
comment6.text=\n\ set\ the\ data\ of\ this\ subject's\ fractal\ elements\n\ \n\ @param\ \ \ x\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ x\ position\ of\ the\ first\ element\n\ @param\ \ \ y\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ y\ position\ of\ the\ first\ element\n\ @param\ \ \ radius\ \ \ \ \ \ \ \ \ \ the\ radius\ of\ the\ first\ element\n\ @param\ \ \ depth\ \ \ \ \ \ \ \ \ \ \ the\ depth\ of\ elements\ to\ draw\n\ @param\ \ \ ratio\ \ \ \ \ \ \ \ \ \ \ the\ ratio\ between\ elements\n\ @param\ \ \ angle\ \ \ \ \ \ \ \ \ \ \ the\ angle\ between\ elements\n\ @param\ \ \ fillColor1\ \ \ \ \ \ the\ fill\ color\ of\ the\ largest\ element\n\ @param\ \ \ fillColor2\ \ \ \ \ \ the\ fill\ color\ of\ the\ smallest\ element\n\ @param\ \ \ lineColor1\ \ \ \ \ \ the\ line\ color\ of\ the\ largest\ element\n\ @param\ \ \ lineColor2\ \ \ \ \ \ the\ line\ color\ of\ the\ smallest\ element\n\ @param\ \ \ useOuline\ \ \ \ \ \ \ draw\ an\ outline\ around\ the\ elements\n\ @param\ \ \ useGradient\ \ \ \ \ iterpolate\ colors\ between\ each\ element\n
comment7.params=
comment7.target=ArrayList\ getData()
comment7.text=\n\ get\ the\ fractal\ data\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ an\ arraylist\ fractal\ data\n
comment8.params=depth\ color1\ color2
comment8.target=java.awt.Color\ getColor(int,\ java.awt.Color,\ java.awt.Color)
comment8.text=\n\ get\ the\ current\ elements\ color\n\ \n\ @param\ \ \ depth\ \ \ \ \ \ \ \ \ \ \ the\ elements\ current\ depth\n\ @param\ \ \ color1\ \ \ \ \ \ \ \ \ \ the\ larger\ elements\ color\n\ @param\ \ \ color2\ \ \ \ \ \ \ \ \ \ the\ smaller\ elements\ color\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ a\ color\ to\ apply\ to\ an\ element\n
comment9.params=ratio\ color1\ color2
comment9.target=java.awt.Color\ interpolateColors(double,\ java.awt.Color,\ java.awt.Color)
comment9.text=\n\ return\ a\ color\ some\ way\ between\ the\ given\ colors\n\ \n\ @param\ \ \ ratio\ \ \ \ \ \ \ \ \ \ \ the\ current\ ratio\ between\ colors\n\ @param\ \ \ color1\ \ \ \ \ \ \ \ \ \ the\ first\ color\ to\ fade\ between\n\ @param\ \ \ color2\ \ \ \ \ \ \ \ \ \ the\ second\ color\ to\ fade\ between\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ new\ color\ part\ way\ between\ the\ given\ colors\n
numComments=11
